syntax = "proto3";
package provenance.msgfees.v1;

import "gogoproto/gogo.proto";
import "cosmos/auth/v1beta1/auth.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package          = "github.com/provenance-io/provenance/x/msgfees/types";
option java_package        = "io.provenance.msgfees.v1";
option java_multiple_files = true;

// Params defines the set of params for the msgfees module.
message Params {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_stringer) = false;
  // indicates if governance based controls of msgFees is allowed.
  bool enable_governance = 1;
}

// MsgFees is the core of what gets stored on the blockchain
// it consists of two parts
// 1. minimum additional fees(can be of any denom)
// 2. Fee rate which is proportional to the gas charged for processing that message.
message MsgFees {
  string msg_type_url = 1;
  // can pay in any Coin( basically a Denom and Amount, Amount can be zero)
  repeated cosmos.base.v1beta1.Coin min_additional_fee = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"min_additional_fee\""
  ];

  //  Fee rate, based on Gas used.
  bytes fee_rate = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "fee_rate,omitempty"
  ];
}
